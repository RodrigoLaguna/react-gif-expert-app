{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","catgs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MASaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAsBO,OAC1CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAnBoB,SAACP,GACzBF,EAAcE,EAAMQ,OAAOF,a,+BCXlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcZM,GAdY,4CAAH,sDCFPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEpC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCEGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECNb,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAK,GACLa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAqB1C,OAdAC,qBAAW,WAETxB,EAASC,GACFwB,MAAM,SAAAC,GAEHH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAIrB,CAACpB,IAGIqB,EDb0BK,CAAc1B,GAAlCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAErB,OACE,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAGEH,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAA+BA,GAAbA,EAAIC,aEYnBgB,EA1Ba,WAAO,IAAD,EAEIzC,mBAAS,CAAC,cAFd,mBAEzB0C,EAFyB,KAEb3C,EAFa,KAIhC,OACE,qCACE,8CAGA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEG2C,EAAWnB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEMA,SAAUA,GADJA,YClB1B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ddc0b593.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n/**==========================================\r\n **          COMPONENTE INPUT\r\n=============================================**/\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  \r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  //* Función para detectar cambios en el input\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  //* Función para agregar valores al estado del componente  \r\n  const handleSubmit = (event)=> {\r\n    event.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories( catgs => [ inputValue,  ...catgs ] );\r\n      setInputValue('');\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n};\r\n\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n","/**==============================================\r\n * *          OBTENER DATA DE GIPHY \r\n *=============================================**/\r\n\r\nexport const getGifs = async ( category )=> {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=YOVjiiRCL9sQfTYrKoPkTAqj29Zgls7a`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    // Informacion necesaria\r\n    const gifs = data.map( img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      }\r\n    });\r\n\r\n    return gifs;\r\n\r\n  };","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFecthGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n/**==========================================\r\n **          COMPONENTE LI\r\n=============================================**/\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n    <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3> \r\n\r\n    { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n      <div className=\"card-grid\">\r\n      \r\n       {\r\n        images.map( ( img ) => \r\n            <GifGridItem key={img.id} { ...img } /> \r\n         )\r\n       }\r\n    </div>\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setstate] = useState({\r\n    data:[],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    \r\n    getGifs( category )\r\n          .then( imgs => {\r\n\r\n              setstate({\r\n                data: imgs,\r\n                loading: false\r\n              });\r\n          });\r\n          \r\n  },[category]);\r\n\r\n\r\n  return state;\r\n}\r\n\r\n\r\n\r\n","import React , { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n/**==============================================\r\n **          COMPONENTE PRINCIPAL\r\n=============================================**/\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n\r\n      {/* Pasamos la propiedad de setCategories() al componente*/}\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr/>\r\n\r\n      <ol>\r\n       { \r\n         categories.map( category => (\r\n              <GifGrid \r\n                    key={ category }\r\n                    category={category} \r\n              />\r\n         )) \r\n       }\r\n      </ol>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default GifExpertApp;\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n"],"sourceRoot":""}